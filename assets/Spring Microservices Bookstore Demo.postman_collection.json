{
	"info": {
		"_postman_id": "6873b873-a26d-4b2f-a4f9-d584815b37d8",
		"name": "Spring Microservices Bookstore Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30664530"
	},
	"item": [
		{
			"name": "API Gateway",
			"item": [
				{
					"name": "Get All Books (GraphQL)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"{ getAllBooks { id name description price } }\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save a Book (GraphQL)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"mutation($book: BookRequest!) { createBook(bookRequest: $book) { id name description price } }\",\r\n  \"variables\": {\r\n    \"book\": {\r\n      \"name\": \"Effective Java\",\r\n      \"description\": \"The definitive guide to Java programming language best practices.\",\r\n      \"price\": 19.99\r\n    }\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Book (GraphQL)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"mutation($id: ID!) { deleteBook(id: $id) }\",\r\n  \"variables\": {\r\n    \"id\": \"6668ed3473d87e10b647634a\"\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Authors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/authors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Erich Gamma\",\r\n    \"birthDate\": \"1961-03-13\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/authors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/authors/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"authors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place Order (In Stock)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"orderLineItemsDtoList\": [\r\n    {\r\n        \"skuCode\": \"design_patterns_gof\",\r\n        \"price\": 29,\r\n        \"quantity\": 1\r\n    }\r\n]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/order",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place Order (Out of stock)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"orderLineItemsDtoList\": [\r\n    {\r\n        \"skuCode\": \"mythical_man_month\",\r\n        \"price\": 39,\r\n        \"quantity\": 1\r\n    }\r\n]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/order",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"order"
							]
						}
					},
					"response": []
				}
			],
			"description": "API Gateway - entry point to the services."
		},
		{
			"name": "Local",
			"item": [
				{
					"name": "Get All Books (GraphQL)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"{ getAllBooks { id name description price } }\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/api/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save a Book (GraphQL)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"mutation($book: BookRequest!) { createBook(bookRequest: $book) { id name description price } }\",\r\n  \"variables\": {\r\n    \"book\": {\r\n      \"name\": \"Effective Java\",\r\n      \"description\": \"The definitive guide to Java programming language best practices.\",\r\n      \"price\": 19.99\r\n    }\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/api/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Book (GraphQL)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"mutation($id: ID!) { deleteBook(id: $id) }\",\r\n  \"variables\": {\r\n    \"id\": \"6668e52957755d72a45c72fd\"\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/api/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"api",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Authors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8085/api/authors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"api",
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Erich Gamma\",\r\n    \"birthDate\": \"1961-03-13\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8085/api/authors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"api",
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8085/api/authors/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"api",
								"authors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place Order (In Stock)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"orderLineItemsDtoList\": [\r\n    {\r\n        \"skuCode\": \"design_patterns_gof\",\r\n        \"price\": 29,\r\n        \"quantity\": 1\r\n    }\r\n]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/api/order",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place Order (Out of Stock)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"orderLineItemsDtoList\": [\r\n    {\r\n        \"skuCode\": \"mythical_man_month\",\r\n        \"price\": 39,\r\n        \"quantity\": 1\r\n    }\r\n]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/api/order",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"order"
							]
						}
					},
					"response": []
				}
			],
			"description": "Useful when running services locally, and not within Docker."
		}
	]
}